{"version":3,"file":"like-spec.js","sources":["like-spec.coffee"],"names":[],"mappings":"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","sourcesContent":["describe \"like plugin tests\", ->\n    likeElms = null\n    likes = null\n    post = null\n    responseData = null\n\n    beforeEach ->\n        fixtures = jasmine.getFixtures()\n        fixtures.fixturesPath = 'base/test/fixtures/'\n        loadFixtures('like.html')\n\n        responseData = {url_create: '/create/foo'}\n\n        post = spyOn(window, 'fetch')\n        post.and.callFake( -> {\n            then: (func) ->\n                data = func({ok: true, json: -> responseData})\n                return {\n                    then: (func) ->\n                        func(data)\n                        return {catch: -> {then: (func) -> func()}}\n                }\n        })\n\n        likeElms = document.querySelectorAll('.js-like')\n        likes = stModules.like(likeElms, {\n            csrfToken: \"foobar\",\n            likeText: \"foo like ({count})\",\n            removeLikeText: \"foo remove like ({count})\"\n        })\n\n    it \"can create the like\", ->\n        post.calls.reset()\n        likeElms[0].click()\n        expect(post.calls.any()).toEqual(true)\n        expect(post.calls.argsFor(0)[0]).toEqual('/foo/create/')\n        expect(post.calls.argsFor(0)[1].body.get('csrfmiddlewaretoken')).toEqual(\"foobar\")\n\n    it \"can create and remove the like\", ->\n        # create\n        post.calls.reset()\n        responseData = {url_delete: \"/foo/delete/\"}\n        likeElms[0].click()\n        expect(post.calls.argsFor(0)[0]).toEqual('/foo/create/')\n        expect(likeElms[0].textContent).toEqual(\"foo remove like (1)\")\n\n        # remove\n        post.calls.reset()\n        responseData = {url_create: \"/foo/create/\"}\n        likeElms[0].click()\n        expect(post.calls.argsFor(0)[0]).toEqual('/foo/delete/')\n        expect(likeElms[0].textContent).toEqual(\"foo like (0)\")\n\n        # create again... and so on...\n        post.calls.reset()\n        responseData = {url_delete: \"/foo/delete/\"}\n        likeElms[0].click()\n        expect(post.calls.argsFor(0)[0]).toEqual('/foo/create/')\n        expect(likeElms[0].textContent).toEqual(\"foo remove like (1)\")\n\n    it \"will tell about an api change\", ->\n        responseData = {unknown: null}\n        likeElms[0].click()\n        expect(likeElms[0].textContent).toEqual(\"api error\")\n\n    it \"prevents from multiple posts while sending\", ->\n        post.and.callFake( -> {then: -> {then: -> {catch: -> {then: -> }}}})\n        likeElms[0].click()\n\n        # next click should do nothing\n        post.calls.reset()\n        likeElms[0].click()\n        expect(post.calls.any()).toEqual(false)\n\n    it \"prevents the default click behaviour\", ->\n        evt = document.createEvent(\"HTMLEvents\")\n        evt.initEvent(\"click\", false, true)\n\n        stopPropagation = spyOn(evt, 'stopPropagation')\n        preventDefault = spyOn(evt, 'preventDefault')\n\n        likeElms[0].dispatchEvent(evt)\n        expect(stopPropagation).toHaveBeenCalled()\n        expect(preventDefault).toHaveBeenCalled()\n"]}